- name: Control Plane => Check if cluster_join_command.sh file exists
  ansible.builtin.stat:
    path: /home/{{ ansible_user }}/cluster_join_command.sh
  register: cluster_initialized

- name: Control Plane => Create cluster with kubeadm
  become: true
  ansible.builtin.shell: |
    kubeadm init --pod-network-cidr="10.244.0.0/16" \
      --apiserver-advertise-address {{ ansible_default_ipv4.address }}
  register: kubeadm_init
  changed_when: kubeadm_init.rc == 0
  when: not cluster_initialized.stat.exists

- name: Control Plan => Create join command
  become: true
  ansible.builtin.command: kubeadm token create --print-join-command
  register: join_command_output
  changed_when: true

- name: Control Plane => Create cluster_join_command.sh file
  ansible.builtin.copy:
    content: "{{ join_command_output.stdout }}"
    dest: /home/{{ ansible_user }}/cluster_join_command.sh
    mode: "0644"
  when: join_command_output is success

- name: Control Plane => Create kube directory
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.kube
    state: directory
    mode: "0755"

- name: Control Plane => Copy Kubernetes config to kube directory
  become: true
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ ansible_user }}/.kube/config
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0644"
    remote_src: true

- name: Control Plane => Download Kubernetes config
  become: true
  ansible.builtin.fetch:
    src: /etc/kubernetes/admin.conf
    dest: "{{ lookup('env', 'HOME') }}/.kube/config"
    owner: "{{ lookup('env', 'USER') }}"
    group: "{{ lookup('env', 'USER') }}"
    mode: "0644"
    flat: true
  run_once: true

- name: Control Plane => Store join command as fact
  ansible.builtin.set_fact:
    join_command: "{{ join_command_output.stdout }}"
  run_once: true

- name: Control Plane => Show join command from fact
  ansible.builtin.debug:
    var: join_command
  run_once: true
